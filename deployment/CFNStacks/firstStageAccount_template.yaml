AWSTemplateFormatVersion: 2010-09-09
Description: Cloudformation template to build assets to used in the Guidance for Multi-account
  Environments on Amazon QuickSight Guidance (SO9402). In particular the assets present
  on the environments account
Outputs:
  LambdaFunction:
    Description: Link to console for the lambda function in charge of synthesizing
      the assets that will be used by the CI/CD pipeline
    Value:
      Fn::Sub: https://${AWS::Region}.console.aws.amazon.com/lambda/home?region=${AWS::Region}#/functions/${lambdaFunction}?tab=code
Parameters:
  AssumeRoleExtId:
    Default: qsdeppipeline
    Description: Ext ID to be used in when assuming the IAM role in the development
      account
    Type: String
  DeploymentAccountId:
    AllowedPattern: ^[0-9]{12}
    Description: Account ID used for the deployment pipelines
    Type: String
  DeploymentS3Bucket:
    AllowedPattern: ^[0-9a-z\.-]{3,63}
    Default: qs-pipeline-bucket
    Description: S3 Bucket to use for pipeline assets
    Type: String
  DeploymentS3Region:
    Default: us-east-1
    Description: Region where the deployment (CI/CD) bucket resides
    Type: String  
  LayerCodeKey:
    AllowedPattern: ^[0-9a-zA-Z\/\-_]+\.zip
    Description: Key within S3 Bucket that contains the zipped code for the lambda
      layer with external libraries. For your convenience you have the source code
      zipped in the guidance under source/lambda/layer folder.
    Type: String
  PipelineName:
    Default: QSCICDPipeline
    Description: Name of the Code Pipeline whose source assets this lambda will be
      contributing to
    Type: String
  RemapDS:
    AllowedValues:
    - true
    - false
    Default: true
    Description: Whether or not to remap the data sources connection properties in
      the dashboard datasets (when using templates) or supported properties when using
      Assets As Bundle (more info here https://a.co/jeHZkOr)
    Type: String
  GenerateNestedStacks:
    AllowedValues:
    - true
    - false
    Default: true
    Description: Whether or not to generate CFN nested stacks to be used by code pipeline
      CAUTION, this setting helps circumvent the potential issue of reaching the max template size (1MB)
      but can also break the resulting template, disable it if you experience any issues wit CFN during pipeline deployments
    Type: String
  ReplicationMethod:
    AllowedValues:
    - TEMPLATE
    - ASSETS_AS_BUNDLE
    Default: ASSETS_AS_BUNDLE
    Description: Method to use to replicate the dashboard (could be either TEMPLATE
      or ASSETS_AS_BUNDLE)
    Type: String
  SourceCodeKey:
    AllowedPattern: ^[0-9a-zA-Z\/\-_]+\.zip
    Description: Key within S3 Bucket that contains the zipped code. For your convenience
      you have the source code zipped in the guidance under source/lambda/qs_assets_CFN_synthesizer
      folder.
    Type: String
  SourceCodeS3Bucket:
    AllowedPattern: ^[0-9a-z\.-]{3,63}
    Description: S3 Bucket containing the code
    Type: String
  StageNames:
    Default: DEV, PRE, PRO
    Description: List of comma-separated names of the stages that your pipeline will
      be having (e.g. DEV, PRE, PRO)
    Type: String
Resources:
  QSlambdaExecRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSLambdaExecute
      - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      - arn:aws:iam::aws:policy/AWSQuickSightAssetBundleImportPolicy
      - arn:aws:iam::aws:policy/AWSQuickSightAssetBundleExportPolicy 
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - quicksight:DescribeDataSet
            - quicksight:ListRefreshSchedules
            - quicksight:DescribeDataSetRefreshProperties
            - quicksight:DescribeRefreshSchedule
            Effect: Allow
            Resource:
            - Fn::Sub: arn:aws:quicksight:*:${AWS::AccountId}:dataset/*
            Sid: 1
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
            - Fn::Sub: arn:aws:iam::${DeploymentAccountId}:role/DevAccountS3AccessRole-QSCICD-${PipelineName}
            Sid: 3
          - Action:
            - quicksight:DescribeDashboard
            Effect: Allow
            Resource:
            - Fn::Sub: arn:aws:quicksight:*:${AWS::AccountId}:dashboard/*
            Sid: 4
          - Action:
            - quicksight:DescribeAnalysisPermissions
            - quicksight:DescribeAnalysis
            Effect: Allow
            Resource:
            - Fn::Sub: arn:aws:quicksight:*:${AWS::AccountId}:analysis/*
            Sid: 5
          - Action:
            - quicksight:DescribeDataSource
            Effect: Allow
            Resource:
            - Fn::Sub: arn:aws:quicksight:*:${AWS::AccountId}:datasource/*
            Sid: 6
          - Action:
            - quicksight:DescribeVPCConnection
            Effect: Allow
            Resource:
            - Fn::Sub: arn:aws:quicksight:*:${AWS::AccountId}:vpcConnection/*
            Sid: 7
          Version: '2012-10-17'
        PolicyName: QSAccessPolicyForLambdaCFNSynthesizer
    Type: AWS::IAM::Role
  eventRule:
    Properties:
      Description: Rule that triggers when a particular dashboard is updated
      EventPattern:
        detail-type:
        - QuickSight Dashboard Published Version Updated
        source:
        - aws.quicksight
      Name:
        Fn::Sub: QuickSightDashboardUpdateRule-${PipelineName}-Rule
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt: lambdaFunction.Arn
        Id:
          Fn::Sub: QSAssetsCFNSynthesizer-${PipelineName}-Target
    Type: AWS::Events::Rule
  lambdaFunction:
    DependsOn:
    - QSlambdaExecRole
    - lambdaLayer
    Properties:
      Code:
        S3Bucket:
          Ref: SourceCodeS3Bucket
        S3Key:
          Ref: SourceCodeKey
      Description: 'Lambda function that describe resources in a source account and
        synthesizes a CFN template that is zipped and stored in the deployment account
        so  codepipeline can take them as input and deploy it across the envs (DEV,
        PRE, PRO)

        '
      Environment:
        Variables:
          ASSUME_ROLE_EXT_ID:
            Ref: AssumeRoleExtId          
          DEPLOYMENT_ACCOUNT_ID:
            Ref: DeploymentAccountId
          DEPLOYMENT_S3_BUCKET:
            Ref: DeploymentS3Bucket
          DEPLOYMENT_S3_REGION:
            Ref: DeploymentS3Region          
          MODE: INITIALIZE
          PIPELINE_NAME:
            Ref: PipelineName
          REMAP_DS:
            Ref: RemapDS
          GENERATE_NESTED_STACKS:
            Ref: GenerateNestedStacks
          REPLICATION_METHOD:
            Ref: ReplicationMethod
          SOURCE_AWS_ACCOUNT_ID:
            Ref: AWS::AccountId                      
          STAGES_NAMES:
            Ref: StageNames
      FunctionName:
        Fn::Sub: QSAssetsCFNSynthesizer-${PipelineName}
      Handler: createTemplateFromAnalysis.lambda_handler
      Layers:
      - Ref: lambdaLayer
      MemorySize: 128
      ReservedConcurrentExecutions: 5
      Role:
        Fn::GetAtt: QSlambdaExecRole.Arn
      Runtime: python3.11
      Timeout: 300
    Type: AWS::Lambda::Function
  lambdaLayer:
    Properties:
      CompatibleArchitectures:
      - x86_64
      CompatibleRuntimes:
      - python3.9
      Content:
        S3Bucket:
          Ref: SourceCodeS3Bucket
        S3Key:
          Ref: LayerCodeKey
      Description:
        Fn::Sub: Layer containing up to date boto3 package and PyYAML needed by QSAssetsCFNSynthesizer-${PipelineName}
          function
      LayerName:
        Fn::Sub: QSAssetsCFNSynthesizer-${PipelineName}-Layer
    Type: AWS::Lambda::LayerVersion
  resourceBasedPerm:
    DependsOn:
    - lambdaFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::Sub: QSAssetsCFNSynthesizer-${PipelineName}
      Principal: events.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/QuickSightDashboardUpdateRule-${PipelineName}-Rule
    Type: AWS::Lambda::Permission

AWSTemplateFormatVersion: 2010-09-09
Description: Cloudformation to deploy code pipeline and auxiliary assets for the Guidance for Multi-account Environments on Amazon QuickSight (SO9402)

Parameters:  
  DevelopmentAccountId:
    Description: Account ID hosting for development environment
    Type: String    
    AllowedPattern: "^[0-9]{12}"    
  PreProdAccountId:
    Description: Account ID hosting for pre-production environment
    Type: String    
    AllowedPattern: "^[0-9]{12}"    
  ProdAccountId:
    Description: Account ID hosting for production environment
    Type: String    
    AllowedPattern: "^[0-9]{12}"   
  PipelineS3BucketName:
    Description: S3 Bucket to use for pipeline assets, could be an existing bucket, in that case make sure you change the CreateBucket parameter to false
    Type: String
    AllowedPattern: "^[0-9a-z\\.-]{3,63}"
    Default: "qs-pipeline-bucket"
  S3Region:
    Description: Region where the S3 bucket will be hosted 
    Type: String
    Default: "us-east-1"
  QuickSightRegion:
    Description: Region where QuickSight assets are hosted
    Type: String
    Default: "us-east-1"
  SrcQSAdminRegion:
    Description: Admin region for your QS source account where your users are hosted
    Type: String
    Default: "us-east-1"
  DestQSAdminRegion:
    Description: Admin region for your QS destination account where your users are hosted
    Type: String
    Default: "us-east-1"
  QSUser:
    Description: QS Username in Account where the assets will be created
    Type: String    
  AccountAdminARN:
    Description: IAM ARN that will be responsible for administering the Account (it will be able to manage the created KMS key for encryption). Eg your role/user arn
    Type: String
    Default: role/Administrator
  Stage1Name:
    Description: Name of the first stage in the pipeline, e.g. DEV
    Type: String
    Default: DEV
  Stage2Name:
    Description: Name of the first stage in the pipeline, e.g. PRE
    Type: String
    Default: PRE    
  Stage3Name:
    Description: Name of the first stage in the pipeline, e.g. PRO
    Type: String
    Default: PRO    
  AssumeRoleExtId:
    Description: IAM external ID to be used in when assuming the IAM role in the development account. See https://a.co/47mgPwV for more details
    Type: String
    Default: qsdeppipeline
  PipelineName:
    Description: "Name for the Code Pipeline that will be created"
    Type: String
    Default: QSCICDPipeline
  ApprovalEmail:
    Description: "Email that you want to be notified for the prod approval phase" 
    Type: String
    Default: user@domain.com
  AdministrationRoleName:
    Type: String
    Default: AWSCloudFormationStackSetAdministrationRole
    Description: "The name of the administration role. Defaults to 'AWSCloudFormationStackSetAdministrationRole'."
  ExecutionRoleName:
    Type: String
    Default: AWSCloudFormationStackSetExecutionRole
    Description: "The name of the execution role that can assume this role. Defaults to 'AWSCloudFormationStackSetExecutionRole'."
  CreateBucket:
    Description: "Decide if pipeline bucket should be created"
    Type: String    
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
    ConstraintDescription: "You need to specify true or false"
  CreateAdmRole:
    Description: "Whether or not the Admin role for self managed stack set operations should be created, choose NO if your admin account already have this role created, more info here https://a.co/e6M6aMV. Remember that you will need to deploy the provided AWSCloudFormationStackSetExecutionRole.yml stack in ALL the stage accounts"
    Type: String    
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
    ConstraintDescription: "You need to specify true or false"
  

Conditions:
  CreateBucketCondition:
    Fn::Equals: [Ref: CreateBucket, "true"]
  CreateAdmRoleCondition:
    Fn::Equals: [Ref: CreateAdmRole, "true"]

Resources:
  AdministrationRole:
    Type: AWS::IAM::Role
    Condition: CreateAdmRoleCondition
    Properties:
      RoleName: 
        Ref: AdministrationRoleName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: 
            Fn::Sub: AssumeRole-${ExecutionRoleName}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - Fn::Sub: 'arn:*:iam::${DevelopmentAccountId}:role/${ExecutionRoleName}'
                  - Fn::Sub: 'arn:*:iam::${PreProdAccountId}:role/${ExecutionRoleName}'
                  - Fn::Sub: 'arn:*:iam::${ProdAccountId}:role/${ExecutionRoleName}'
  pipelineS3Bucket:
    Type: AWS::S3::Bucket
    Condition: CreateBucketCondition
    Properties: 
      AccessControl: Private
      BucketName: 
        Ref: PipelineS3BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionExpiration:
              NoncurrentDays: 30
            Status: Enabled
      VersioningConfiguration: 
        Status: Enabled
      WebsiteConfiguration:
        IndexDocument: index.hmtl
      NotificationConfiguration: 
        EventBridgeConfiguration:
          EventBridgeEnabled: true
  approvalTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: 
        Fn::Sub: ${PipelineName}-Topic
      KmsMasterKeyId: 
        Ref: snsEncryptionKey
      Subscription: 
        - Endpoint: 
            Ref: ApprovalEmail
          Protocol: email  
  snsEncryptionKey:
    Type: AWS::KMS::Key
    Properties: 
      Description: 
        Fn::Sub: KMS key used to encrypt content of messages delivered to QS ${PipelineName} CI/CD pipeline
      Enabled: True
      EnableKeyRotation: True
      KeyPolicy: 
        Version: '2012-10-17'
        Id: allow-sns
        Statement:
        - Sid: Allow access through SNS for all principals in the account that are authorized to use SNS
          Action:
          - kms:Decrypt
          - kms:GenerateDataKey*
          - kms:CreateGrant
          - kms:ListGrants
          - kms:DescribeKey
          Condition:
            StringEquals:
              kms:CallerAccount: 
                Ref: AWS::AccountId 
              kms:ViaService: sns.us-east-1.amazonaws.com
          Effect: Allow
          Principal:
            AWS: 
              Fn::GetAtt: CodePipelineRole.Arn
          Resource: '*'
        - Sid: Allow administration of the key
          Effect: Allow
          Action:
          - kms:Create*
          - kms:Describe*
          - kms:Enable*
          - kms:List*
          - kms:Put*
          - kms:Update*
          - kms:Revoke*
          - kms:Disable*
          - kms:Get*
          - kms:Delete*
          - kms:ScheduleKeyDeletion
          - kms:CancelKeyDeletion            
          Principal:
            AWS: 
              Ref: AccountAdminARN
          Resource: '*'
        - Sid: Allow direct access to key metadata to the account
          Action:
          - kms:Describe*
          - kms:Get*
          - kms:List*
          - kms:RevokeGrant
          Effect: Allow
          Principal:
            AWS: 
              Fn::Sub: arn:aws:iam::${AWS::AccountId}:root
          Resource: '*'          
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT 

  codepipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:       
      - CodePipelineRole
    Properties:
      Name: 
        Ref: PipelineName
      PipelineType: V2
      ExecutionMode: QUEUED
      RoleArn: 
        Fn::GetAtt: CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: 
          Fn::If: [CreateBucketCondition, Ref: pipelineS3Bucket, Ref: PipelineS3BucketName]  
      Stages: 
        - Name: Source
          Actions:
            - Name: Source_Assets
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: "1"
              OutputArtifacts:
                  - Name: SourceAssetsArtifact
              Configuration:                
                  PollForSourceChanges: 'false'
                  S3Bucket: 
                    Fn::If: [CreateBucketCondition, Ref: pipelineS3Bucket, Ref: PipelineS3BucketName]  
                  S3ObjectKey: 
                    Fn::Sub: ${PipelineName}/CFNTemplates/SOURCE_assets_CFN.zip
              RunOrder: 1
              Region: 
                Ref: S3Region
              Namespace: SourceVariablesSource
            - Name: Dest_Assets
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: "1"
              OutputArtifacts:
                  - Name: DestAssetsArtifact
              Configuration:                
                  PollForSourceChanges: 'false'
                  S3Bucket: 
                    Fn::If: [CreateBucketCondition, Ref: pipelineS3Bucket, Ref: PipelineS3BucketName]  
                  S3ObjectKey: 
                    Fn::Sub: ${PipelineName}/CFNTemplates/DEST_assets_CFN.zip
              RunOrder: 2
              Region:
                Ref: S3Region
              Namespace: SourceVariablesDest
        - Name: Deploy
          Actions:
            - Name: 
                Fn::Sub: Deploy_${Stage2Name}_Source_Assets
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormationStackSet
                Version: "1"
              Configuration:
                DeploymentTargets: ou-my7p-vzbg144t
                CallAs: DELEGATED_ADMIN                
                PermissionModel: SELF_MANAGED
                AdministrationRoleArn: 
                  Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${AdministrationRoleName}
                ExecutionRoleName: 
                  Ref: ExecutionRoleName
                Regions: 
                  Ref: QuickSightRegion
                StackSetName: 
                  Fn::Sub: ${PipelineName}-QSSourceAssets
                TemplatePath: SourceAssetsArtifact::QS_assets_CFN_SOURCE.yaml
                Parameters: 
                  Fn::Sub: SourceAssetsArtifact::source_cfn_template_parameters_${Stage2Name}.txt
              InputArtifacts:
                  - Name: SourceAssetsArtifact
              RunOrder: 1
              Region: 
                Ref: "AWS::Region"
              Namespace: 
                Fn::Sub: DeployVariablesSource${Stage2Name}
            - Name: 
                Fn::Sub: Deploy_${Stage2Name}_Dest_Assets
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormationStackSet
                Version: "1"
              Configuration:                
                DeploymentTargets: ou-my7p-k3a361d9
                PermissionModel: SELF_MANAGED
                AdministrationRoleArn: 
                  Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${AdministrationRoleName}
                ExecutionRoleName: 
                  Ref: ExecutionRoleName
                CallAs: DELEGATED_ADMIN                
                Regions: 
                  Ref: QuickSightRegion
                StackSetName: 
                  Fn::Sub: ${PipelineName}-QSDestAssets
                TemplatePath: DestAssetsArtifact::QS_assets_CFN_DEST.yaml
                Parameters: 
                  Fn::Sub: DestAssetsArtifact::dest_cfn_template_parameters_${Stage2Name}.txt
              InputArtifacts:
                - Name: DestAssetsArtifact
              RunOrder: 2
              Region: 
                Ref: "AWS::Region"
              Namespace:
                Fn::Sub: DeployVariablesDest${Stage2Name}
        - Name: Approval-Stage
          Actions:
            - Name: Manual-Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"
              Configuration:
                NotificationArn: 
                  Ref: approvalTopic
              Region: 
                Ref: "AWS::Region"
              RunOrder: 1
        - Name: 
            Fn::Sub: Deploy-${Stage3Name}
          Actions:
            - Name: 
                Fn::Sub: Deploy_${Stage3Name}_Source_Assets
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormationStackInstances
                Version: "1"
              Configuration:
                DeploymentTargets: ou-my7p-k3a361d9
                ParameterOverrides: 
                  Fn::Sub: SourceAssetsArtifact::source_cfn_template_parameters_${Stage3Name}.txt
                Regions: 
                  Ref: QuickSightRegion
                CallAs: DELEGATED_ADMIN
                StackSetName: 
                  Fn::Sub: ${PipelineName}-QSSourceAssets
              InputArtifacts:
                - Name: SourceAssetsArtifact
              Region: 
                Ref: "AWS::Region"
              RunOrder: 1
            - Name: 
                Fn::Sub: Deploy_${Stage3Name}_Dest_Assets
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormationStackInstances
                Version: "1"
              Configuration:
                DeploymentTargets: ou-my7p-i7nnlz6i
                ParameterOverrides: 
                  Fn::Sub: DestAssetsArtifact::dest_cfn_template_parameters_${Stage3Name}.txt
                CallAs: DELEGATED_ADMIN
                Regions: 
                  Ref: QuickSightRegion
                StackSetName: 
                  Fn::Sub: ${PipelineName}-QSDestAssets
              InputArtifacts:
                  - Name: DestAssetsArtifact
              RunOrder: 2

  EventBridgeRuleSourceAssets:
    Type: AWS::Events::Rule
    DependsOn: 
      - codepipeline
      - eventBridgeRole
    Properties:
      Description: >-
        Amazon CloudWatch Events rule to automatically start your pipeline when a change occurs in the Amazon S3 assets folder. Deleting this may prevent changes from being detected in that pipeline
      EventBusName: default
      EventPattern: 
        source:
          - aws.s3
        detail-type:
          - Object Created
        detail:
          bucket: 
            name: 
              - Fn::If: [CreateBucketCondition, Ref: pipelineS3Bucket, Ref: PipelineS3BucketName]  
          object:
            key:
              - Fn::Sub: ${PipelineName}/CFNTemplates/DEST_assets_CFN.zip
              - Fn::Sub: ${PipelineName}/CFNTemplates/SOURCE_assets_CFN.zip
      Name: 
        Fn::Sub: ${PipelineName}S3SourceRule
      State: ENABLED
      Targets: 
        -   Arn: 
              Fn::Sub: arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${codepipeline}
            Id: 
              Ref: codepipeline                   
            RoleArn: 
              Fn::GetAtt: eventBridgeRole.Arn
      
  eventBridgeRole:
    Type: AWS::IAM::Role
    Properties:      
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
      Policies:
        - 
         PolicyName: 
           Fn::Sub: start-pipeline-execution-${codepipeline}
         PolicyDocument:
           Version: "2012-10-17"
           Statement:
              - 
                Effect: "Allow"
                Action:
                  - codepipeline:StartPipelineExecution
                Resource:
                  - Fn::Sub: arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${codepipeline}

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            
  CodePipelineRolePolicy:      
    Type: AWS::IAM::RolePolicy
    Properties: 
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
            - iam:PassRole
            - iam:GetAccountAuthorizationDetails
            - organizations:ListAccounts
            - organizations:DescribeAccount
            - organizations:DescribeOrganization
            - organizations:ListPoliciesForTarget
            - organizations:ListDelegatedAdministrators
            - organizations:ListDelegatedServicesForAccount
            Resource: '*'
            Effect: Allow
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - cloudformation.amazonaws.com
                  - elasticbeanstalk.amazonaws.com
                  - ec2.amazonaws.com
                  - ecs-tasks.amazonaws.com
          - Action:
            - iam:PassRole
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                - cloudformation.amazonaws.com
            Effect: Allow
            Resource: 
              - Fn::GetAtt: CodePipelineRole.Arn
              - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${AdministrationRoleName}
          - Action:
            - cloudwatch:*
            Effect: Allow
            Resource: '*'
          - Action:
            - s3:GetObject*
            - s3:PutObject*            
            Effect: Allow
            Resource:  
              Fn::Sub: "arn:aws:s3:::${PipelineS3BucketName}/*"
          - Action:
            - sns:Publish            
            Effect: Allow
            Resource:  
              Ref: approvalTopic
          - Action:
            - s3:ListBucket
            - s3:PutBucket*
            - s3:GetBucket*
            Effect: Allow
            Resource:  
              Fn::Sub: "arn:aws:s3:::${PipelineS3BucketName}"
          - Action:
            - cloudformation:CreateStack
            - cloudformation:DeleteStack
            - cloudformation:DescribeStacks
            - cloudformation:UpdateStack
            - cloudformation:CreateChangeSet
            - cloudformation:DeleteChangeSet
            - cloudformation:DescribeChangeSet
            - cloudformation:ExecuteChangeSet
            - cloudformation:SetStackPolicy
            - cloudformation:ValidateTemplate
            - cloudformation:DescribeStackSet 
            - cloudformation:ListStackInstances 
            Effect: Allow
            Resource:  
              - "*"
      PolicyName: QSCICDPipelinePolicy
      RoleName: 
        Ref: CodePipelineRole

                
  S3AssumeRole:
    Type: AWS::IAM::Role    
    Properties:  
      RoleName: 
        Fn::Sub: DevAccountS3AccessRole-QSCICD-${PipelineName}
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS: 
                Fn::Sub: "arn:aws:iam::${DevelopmentAccountId}:root"
            Condition:
              StringEquals:
                sts:ExternalId: 
                  Ref: AssumeRoleExtId
      Policies:
        - 
         PolicyName: "DevAccountWriteToResourceBucket"
         PolicyDocument:
           Version: "2012-10-17"
           Statement:
            - Action:
              - s3:PutObject
              - s3:ListBucket
              - s3:PutObjectAcl
              - s3:GetObject
              - s3:GetObjectAcl
              - s3:GetBucketLocation
              Effect: Allow
              Resource:
              - Fn::Sub: "arn:aws:s3:::${PipelineS3BucketName}"
              - Fn::Sub: "arn:aws:s3:::${PipelineS3BucketName}/*"
              Sid: VisualEditor0
            - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:PutItem
              - dynamodb:DescribeTable
              - dynamodb:DeleteItem
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:Query
              - dynamodb:UpdateItem
              Effect: Allow
              Resource:
                - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/QSAssetParameters-${PipelineName}                
                - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/QSTrackedAssets-${PipelineName}
  paramDDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: StageName
          AttributeType: S
        - AttributeName: AssetType
          AttributeType: S       
      KeySchema:
        - AttributeName: StageName
          KeyType: HASH      
        - AttributeName: AssetType
          KeyType: RANGE
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: 
        Fn::Sub: QSAssetParameters-${PipelineName}
  
  trackedAssetsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: AssetId
          AttributeType: S
        - AttributeName: AssetType
          AttributeType: S
      KeySchema:
        - AttributeName: AssetId
          KeyType: HASH
        - AttributeName: AssetType
          KeyType: RANGE
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5      
      TableName: 
        Fn::Sub: QSTrackedAssets-${PipelineName}      
Outputs:
  Codepipeline:
    Description: Link to the codepipeline created to implement QuickSight CI/CD
    Value: 
      Fn::Sub: "https://${AWS::Region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${PipelineName}/view" 
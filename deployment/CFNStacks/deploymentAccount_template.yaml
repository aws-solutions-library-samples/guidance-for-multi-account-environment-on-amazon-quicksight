AWSTemplateFormatVersion: 2010-09-09
Description: Cloudformation to deploy pipeline for QS Multiaccount strategy

Parameters: 
  DeploymentAccountId:
    Description: Account ID for deployment pipeline
    Type: String    
    AllowedPattern: "^[0-9]{12}"    
  DevelopmentAccountId:
    Description: Account ID hosting for development environment
    Type: String    
    AllowedPattern: "^[0-9]{12}"    
  PreProdAccountId:
    Description: Account ID hosting for pre-production environment
    Type: String    
    AllowedPattern: "^[0-9]{12}"    
  ProdAccountId:
    Description: Account ID hosting for production environment
    Type: String    
    AllowedPattern: "^[0-9]{12}"    
  PipelineS3BucketName:
    Description: S3 Bucket to use for pipeline assets
    Type: String
    AllowedPattern: "^[0-9a-z\\.-]{3,63}"    
  S3Region:
    Description: Region where the S3 bucket will be hosted 
    Type: String    
  QuickSightRegion:
    Description: Region where QuickSight assets are hosted
    Type: String    
  SrcQSAdminRegion:
    Description: Admin region for your QS source account where your users are hosted
    Type: String    
  DestQSAdminRegion:
    Description: Admin region for your QS destination account where your users are hosted
    Type: String    
  QSUser:
    Description: QS Username in Account where the assets will be created
    Type: String    
  Stage1Name:
    Description: Name of the first stage in the pipeline, e.g. DEV
    Type: String    
  Stage2Name:
    Description: Name of the first stage in the pipeline, e.g. PRE
    Type: String    
  Stage3Name:
    Description: Name of the first stage in the pipeline, e.g. PRO
    Type: String    
  AssumeRoleExtId:
    Description: Ext ID to be used in when assuming the IAM role in the development account
    Type: String    
  PipelineName:
    Description: "Name for the Code Pipeline that will be created"
    Type: String
  ApprovalEmail:
    Description: "Email that you want to be notified for the prod approval phase" 
    Type: String    
  CreateBucket:
    Description: "Decide if pipeline bucket should be created"
    Type: String    
    AllowedValues:
      - "true"
      - "false"
    ConstraintDescription: "You need to specify true or false"
  

Conditions:
  CreateBucketCondition:
    !Equals [!Ref CreateBucket, "true"]

Resources: 
  pipelineS3Bucket:
    Type: AWS::S3::Bucket
    Condition: CreateBucketCondition
    Properties: 
      AccessControl: Private
      BucketName: !Ref PipelineS3BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      VersioningConfiguration: 
        Status: Enabled
      NotificationConfiguration: 
        EventBridgeConfiguration:
          EventBridgeEnabled: true
  approvalTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub ${PipelineName}-Topic
      Subscription: 
        - Endpoint: !Ref ApprovalEmail
          Protocol: email       
  codepipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:       
      - CodePipelineRole
    Properties:
      Name: !Ref PipelineName
      RoleArn: 
        !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !If [CreateBucketCondition, !Ref pipelineS3Bucket, !Ref PipelineS3BucketName]  
      Stages: 
        - Name: Source
          Actions:
            - Name: Source_Assets
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: "1"
              OutputArtifacts:
                  - Name: SourceAssetsArtifact
              Configuration:                
                  PollForSourceChanges: 'false'
                  S3Bucket: !If [CreateBucketCondition, !Ref pipelineS3Bucket, !Ref PipelineS3BucketName]  
                  S3ObjectKey: !Sub ${PipelineName}/CFNTemplates/SOURCE_assets_CFN.zip
              RunOrder: 1
              Region: !Ref S3Region
              Namespace: SourceVariablesSource
            - Name: Dest_Assets
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: "1"
              OutputArtifacts:
                  - Name: DestAssetsArtifact
              Configuration:                
                  PollForSourceChanges: 'false'
                  S3Bucket: !If [CreateBucketCondition, !Ref pipelineS3Bucket, !Ref PipelineS3BucketName]  
                  S3ObjectKey: !Sub ${PipelineName}/CFNTemplates/DEST_assets_CFN.zip
              RunOrder: 2
              Region: !Ref S3Region
              Namespace: SourceVariablesDest
        - Name: Deploy
          Actions:
            - Name: !Sub Deploy_${Stage2Name}_Source_Assets
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormationStackSet
                Version: "1"
              Configuration:
                AdministrationRoleArn: !Sub arn:aws:iam::${DeploymentAccountId}:role/AWSCloudFormationStackSetAdministrationRole
                DeploymentTargets: !Ref DevelopmentAccountId
                ExecutionRoleName: AWSCloudFormationStackSetExecutionRole               
                PermissionModel: SELF_MANAGED
                Regions: !Ref QuickSightRegion
                StackSetName: !Sub ${PipelineName}-QSSourceAssets
                TemplatePath: SourceAssetsArtifact::QStemplate_CFN_SOURCE.yaml
                Parameters: !Sub SourceAssetsArtifact::source_cfn_template_parameters_${Stage2Name}.txt
              InputArtifacts:
                  - Name: SourceAssetsArtifact
              RunOrder: 1
              Region: !Ref "AWS::Region"
              Namespace: !Sub DeployVariablesSource${Stage2Name}
            - Name: !Sub Deploy_${Stage2Name}_Dest_Assets
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormationStackSet
                Version: "1"
              Configuration:
                AdministrationRoleArn: !Sub arn:aws:iam::${DeploymentAccountId}:role/AWSCloudFormationStackSetAdministrationRole
                DeploymentTargets: !Ref PreProdAccountId
                ExecutionRoleName: AWSCloudFormationStackSetExecutionRole                
                PermissionModel: SELF_MANAGED
                Regions: !Ref QuickSightRegion
                StackSetName: !Sub ${PipelineName}-QSDestAssets
                TemplatePath: DestAssetsArtifact::QS_assets_CFN_DEST.yaml
                Parameters: !Sub DestAssetsArtifact::dest_cfn_template_parameters_${Stage2Name}.txt
              InputArtifacts:
                - Name: DestAssetsArtifact
              RunOrder: 2
              Region: !Ref "AWS::Region"
              Namespace: !Sub DeployVariablesDest${Stage2Name}
        - Name: Approval-Stage
          Actions:
            - Name: Manual-Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"
              Configuration:
                NotificationArn: !Ref approvalTopic
              Region: !Ref "AWS::Region"
              RunOrder: 1
        - Name: !Sub Deploy-${Stage3Name}
          Actions:
            - Name: !Sub Deploy_${Stage3Name}_Source_Assets
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormationStackInstances
                Version: "1"
              Configuration:
                DeploymentTargets: !Ref PreProdAccountId
                ParameterOverrides: !Sub SourceAssetsArtifact::source_cfn_template_parameters_${Stage3Name}.txt
                Regions: !Ref QuickSightRegion
                StackSetName: !Sub ${PipelineName}-QSSourceAssets
              InputArtifacts:
                - Name: SourceAssetsArtifact
              Region: !Ref "AWS::Region"
              RunOrder: 1
            - Name: !Sub Deploy_${Stage3Name}_Dest_Assets
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormationStackInstances
                Version: "1"
              Configuration:
                DeploymentTargets: !Ref ProdAccountId
                ParameterOverrides: !Sub DestAssetsArtifact::dest_cfn_template_parameters_${Stage3Name}.txt                  
                Regions: !Ref QuickSightRegion
                StackSetName: !Sub ${PipelineName}-QSDestAssets
              InputArtifacts:
                  - Name: DestAssetsArtifact
              RunOrder: 2

  EventBridgeRuleSourceAssets:
    Type: AWS::Events::Rule
    DependsOn: 
      - codepipeline
      - eventBridgeRole
    Properties:
      Description: >-
        Amazon CloudWatch Events rule to automatically start your pipeline when a change occurs in the Amazon S3 assets folder. Deleting this may prevent changes from being detected in that pipeline
      EventBusName: default
      EventPattern: 
        source:
          - aws.s3
        detail-type:
          - Object Created
        detail:
          bucket: 
            name: 
              - !If [CreateBucketCondition, !Ref pipelineS3Bucket, !Ref PipelineS3BucketName]  
          object:
            key:
              - !Sub ${PipelineName}/CFNTemplates/DEST_assets_CFN.zip
              - !Sub ${PipelineName}/CFNTemplates/SOURCE_assets_CFN.zip
      Name: !Sub ${PipelineName}S3SourceRule
      State: ENABLED
      Targets: 
        -   Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${codepipeline}
            Id: !Ref codepipeline                   
            RoleArn: !GetAtt eventBridgeRole.Arn
      
  eventBridgeRole:
    Type: AWS::IAM::Role
    Properties:      
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
      Policies:
        - 
         PolicyName: !Sub start-pipeline-execution-${codepipeline}
         PolicyDocument:
           Version: "2012-10-17"
           Statement:
              - 
                Effect: "Allow"
                Action:
                  - codepipeline:StartPipelineExecution
                Resource:
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${codepipeline}

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            
  CodePipelineRolePolicy:      
    Type: AWS::IAM::RolePolicy
    Properties: 
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
            - iam:PassRole
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                - cloudformation.amazonaws.com
            Effect: Allow
            Resource: 
              - !GetAtt CodePipelineRole.Arn
              - !Sub arn:aws:iam::${AWS::AccountId}:role/AWSCloudFormationStackSetAdministrationRole
          - Action:
            - cloudwatch:*
            Effect: Allow
            Resource: '*'
          - Action:
            - s3:GetObject*
            - s3:PutObject*            
            Effect: Allow
            Resource:  !Sub "arn:aws:s3:::${pipelineS3Bucket}/*"
          - Action:
            - sns:Publish            
            Effect: Allow
            Resource:  !Ref approvalTopic
          - Action:
            - s3:ListBucket
            - s3:PutBucket*
            - s3:GetBucket*
            Effect: Allow
            Resource:  !Sub "arn:aws:s3:::${pipelineS3Bucket}"
          - Action:
            - cloudformation:CreateStackSet
            - cloudformation:CreateStackInstances
            - cloudformation:GetTemplateSummary
            - cloudformation:DescribeStackSet
            - cloudformation:ListStackInstances                
            - cloudformation:UpdateStackSet
            - cloudformation:DescribeStackSetOperation
            Effect: Allow
            Resource:  
              - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stackset/${PipelineName}-QSSourceAssets:*"
              - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stackset/${PipelineName}-QSDestAssets:*"
      PolicyName: QSCICDPipelinePolicy
      RoleName: !Ref CodePipelineRole

                
  S3AssumeRole:
    Type: AWS::IAM::Role
    DependsOn: pipelineS3Bucket
    Condition: CreateBucketCondition
    Properties:  
      RoleName: DevAccountS3AccessRole    
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${DevelopmentAccountId}:root"
            Condition:
              StringEquals:
                sts:ExternalId: !Ref AssumeRoleExtId
      Policies:
        - 
         PolicyName: "DevAccountWriteToResourceBucket"
         PolicyDocument:
           Version: "2012-10-17"
           Statement:
            - Action:
              - s3:PutObject
              - s3:ListBucket
              - s3:PutObjectAcl
              - s3:GetObject
              - s3:GetObjectAcl
              Effect: Allow
              Resource:
              - !Sub "arn:aws:s3:::${pipelineS3Bucket}"
              - !Sub "arn:aws:s3:::${pipelineS3Bucket}/*"
              Sid: VisualEditor0
Outputs:
  Codepipeline:
    Description: Codepipeline created to implement QuickSight CI/CD
    Value: !Ref codepipeline
  TopicArn:
    Description: SNS topic ARN used for notifications upon approval requests in production, your provided approval email has been added to it, you will need to confirm the address
    Value: !Ref approvalTopic
  DeploymentS3Bucket:
    Description: Name of the bucket that will be used by the code pipeline to store its artifacts
    Value: !Ref pipelineS3Bucket
    